name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build Docker image
        run: |
          docker build -t vinayak868/simple-node-app:latest .
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push vinayak868/simple-node-app:latest

      - name: Generate SBOM
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
          syft . -o cyclonedx-json > sbom.json

      - name: Commit SBOM to repo
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config --global user.name 'vinatu'
          git config --global user.email 'l00179000@atu.ie'
          git remote set-url origin https://vinatu:${{ secrets.GH_TOKEN }}@github.com/vinatu/simple-node-app.git
          git add sbom.json
          git commit -m 'Add SBOM'
          git push

      - name: Verify Compliance
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
          grype sbom:sbom.json -o json > compliance-report.json

      - name: Commit Compliance Report to repo
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config --global user.name 'vinatu'
          git config --global user.email 'l00179000@atu.ie'
          git remote set-url origin https://vinatu:${{ secrets.GH_TOKEN }}@github.com/vinatu/simple-node-app.git
          git add compliance-report.json
          git commit -m 'Add Compliance Report'
          git push

  build-sbom-controller:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - name: Build and push SBOM controller Docker image
        run: |
          cd sbom-controller
          docker build -t vinayak868/sbom-controller:latest .
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push vinayak868/sbom-controller:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Argo CD CLI
        run: |
          curl -sSL --http1.1 -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Debug Network Connectivity
        run: |
          echo "Checking network connectivity to Argo CD server..."
          echo "ARGOCD_SERVER: https://localhost:8080"
          ping -c 4 localhost || true
          curl -v https://localhost:8080 || true

      - name: Log in to Argo CD
        env:
          ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
        run: |
          echo "Attempting to log in to Argo CD..."
          argocd login https://localhost:8080 --insecure --auth-token $ARGOCD_AUTH_TOKEN --grpc-web

      - name: Sync Argo CD Application
        run: |
          echo "Syncing Argo CD application..."
          argocd app sync simple-node-app

